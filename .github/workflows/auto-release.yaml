name: Auto Version Release

# it is trigger by tag event:
# 1 build the release image, push images to ghcr.io, and build image like: ghcr.io/xxxx:v1.0.0
# 2 package the chart package, update index.yaml and commit to '/charts' of branch 'github_pages' ( PR with label pr/release/robot_update_githubpage )
# 3 create changelog file, commit to '/changelogs' of branch 'github_pages' for githubPage ( PR with label pr/release/robot_update_githubpage )
# 4 commit '/docs' to '/docs' of branch 'github_pages'
# 5 create a release , attached with the chart and changelog

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag'
        required: true
        default: v1.0.0

permissions: write-all

jobs:
  get-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ env.RUN_TAG }}
    steps:
      - name: Get Ref
        id: get_ref
        run: |
          if ${{ github.event_name == 'workflow_dispatch' }} ; then
            echo "call by self workflow_dispatch"
            echo "RUN_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
            YBranchName=` grep -Eo "v[0-9]+\.[0-9]+" <<< "${{ github.event.inputs.tag }}" `
          elif ${{ github.event_name == 'push' }} ; then
            echo "call by push tag"
            echo "RUN_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
            YBranchName=` grep -Eo "v[0-9]+\.[0-9]+" <<< "${GITHUB_REF##*/}" `
          else
            echo "unexpected event: ${{ github.event_name }}"
            exit 1
          fi
          echo "YBranchName=${YBranchName}"
          if [ -n "$YBranchName" ] ; then
              echo "RUN_YBranchName=${YBranchName}" >> $GITHUB_ENV
          else
              echo "error, failed to find y branch"
              exit 1
          fi
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.RUN_TAG }}
      - name: Check Version
        run: |
          TagVersion="${{ env.RUN_TAG }}"
          RecordVersion=` cat VERSION  | tr -d ' ' | tr -d '\n' `
          if [ "$RecordVersion" != "$TagVersion" ] ; then
            echo "error, version $RecordVersion of '/VERSION' is different with Tag $TagVersion "
            exit 1
          fi
          #no need to check chart version, which will auto update to /VERSION by CI
        # if branch exists, the action will no fail, and it output created=false
      - name: release Y branch
        uses: peterjgrainger/action-create-branch@v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'release-${{ env.RUN_YBranchName }}'
          sha: '${{ github.sha }}'
  build-release-image:
    needs: get-tag
    uses: ./.github/workflows/call-release-image.yaml
    with:
      ref: ${{ needs.get-tag.outputs.tag }}
    secrets: inherit

  release-chart:
    needs: [get-tag]
    # needs: [build-release-image, get-tag]
    uses: ./.github/workflows/call-release-helm.yaml
    with:
      ref: ${{ needs.get-tag.outputs.tag }}
      submit: true
    secrets: inherit

  generate-release-notes:
    needs: [get-tag]
    uses: ./.github/workflows/call-gen-release-notes.yaml
    with:
      ref: ${{ needs.get-tag.outputs.tag }}
      submit: true
    secrets: inherit
    permissions:
      contents: write
