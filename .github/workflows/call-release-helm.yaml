name: Call Release Helm Charts

# must set branch 'github_pages' as github page
# this workflow will create the tgz from "/charts/*" of branch main,
# and deploy to "/charts" of branch "github_pages"
# and on branch "github_pages", update '/index.yaml' for '/charts/*.tgz'

env:
  HELM_VERSION: v3.8.1

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      submit:
        required: true
        type: string
    outputs:
      artifact:
        description: "name of artifact"
        value: chart_package_artifact
  workflow_dispatch:
    inputs:
      ref:
        description: 'tag, sha, branch'
        required: true
        default: v1.0.0

permissions: write-all

jobs:

  # packages tgz from /charts of original branch, deploy to /charts of target branch
  package_chart:
    runs-on: ubuntu-latest
    steps:
      - name: Get Original Ref
        id: ref
        run: |
          if ${{ inputs.ref != '' }} ; then
              echo "call by workflow_call"
              echo "REF=${{ inputs.ref }}" >> $GITHUB_ENV
              echo "SUBMIT=${{ inputs.submit }}" >> $GITHUB_ENV
          elif ${{ github.event_name == 'workflow_dispatch' }} ; then
              echo "call by self workflow_dispatch"
              echo "REF=${{ inputs.ref }}" >> $GITHUB_ENV
              echo "SUBMIT=true" >> $GITHUB_ENV
          else
              echo "unexpected event: ${{ github.event_name }}"
              exit 1
          fi
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.ref.outputs.ref }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Package Chart
        continue-on-error: false
        run: |
          cd charts
          make clean
          make
          if ! ls *.tgz &>/dev/null ; then
            echo "failed to generate chart"
            exit 1
          fi

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: charts/
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NAME_TEMPLATE: ${{ steps.ref.outputs.ref }}
